<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<title>Chat Example</title>
<script src="http://libs.baidu.com/jquery/2.0.3/jquery.min.js"></script>

<script type="text/javascript">
function ab2str(buf) {
    return String.fromCharCode.apply(null, new Uint16Array(buf));
}

function str2ab(str) {
    var buf = new ArrayBuffer(str.length*2); // 2 bytes for each char
    var bufView = new Uint16Array(buf);
    for (var i=0, strLen=str.length; i<strLen; i++) {
        bufView[i] = str.charCodeAt(i);
    }
    return buf;
}

$(function(){

    function appendLog(msg) {
        var d = log[0]
        var doScroll = d.scrollTop == d.scrollHeight - d.clientHeight;
        msg.appendTo(log)
        if (doScroll) {
            d.scrollTop = d.scrollHeight - d.clientHeight;
        }
    }
    
    var conn;
    var msg = $("#msg");
    var log = $("#log");

    $("#login").click(function() {
        if (!conn) {
            return false;
        }
        var sessionid = $("#username");
        if (sessionid.val() == "") {
            return false;
        }
        //数据发送
        var data = {
            cmd: "login",
            sequence:"random",
            message: {
                username:sessionid.val(),
                password:$("#password").val(),
                appid:"1001"
            }
        };

        var m = JSON.stringify(data);      
        conn.send(m);
        return false
    });

    $("#send").click(function() {
        if (!conn) {
            return false;
        }
        
        if (msg.val() == "") {
            return false;
        }

        var data = {
            cmd: "chat",
            sequence:"random",
            to:$("#to").val(),
            totype:"all",
            message:{
                title:"Test Chat",
                content:$("#msg").val(),
                extras : "{\"news\":100,\"level\":\"Test Extras\"}"
            }
        };

        
        var m = JSON.stringify(data);      
        conn.send(m);
        msg.val("");
        return false
    });

    if (window["WebSocket"]) {
        conn = new WebSocket("ws://{{$}}/ws");
        conn.binaryType = 'arraybuffer';

        conn.onclose = function(evt) {
            appendLog($("<div><b>Connection closed.</b></div>"))
        }

        conn.onmessage = function(evt) { 
            if (evt.data instanceof ArrayBuffer) {
                var dd = ab2str(evt.data);
                console.log(dd);
            } else {
                console.log(evt.data);
                var msg = JSON.parse(evt.data);
                var time = new Date(parseInt(msg.Stime) * 1000);
                var timeStr = time.toLocaleTimeString();
                //var timeStr = new Date(parseInt(msg.Stime) * 1000).toLocaleString().replace(/年|月/g, "-").replace(/日/g, " ")

                switch(msg.Cmd) {
                    case "login":
                    case "chat":
                        appendLog($("<div/>").text(msg.Message.content + "\t"+timeStr))
                    break;    
                }
                //响应消息
                if ((msg.Cmd =="login" || msg.Cmd =="chat") && msg.Id>0) {
                    var data = {
                        cmd:"received",
                        sequence:msg.Sequence,
                        message:{
                            id: msg.Id.toString(),
                            code:"2101",//消息已接受
                            title:"received",
                            content:"received",
                        }
                    };
                    var m = JSON.stringify(data);
                    conn.send(m);
                };

            }
        }
    } else {
        appendLog($("<div><b>Your browser does not support WebSockets.</b></div>"))
    }
});
</script>
<style type="text/css">
html {
    overflow: hidden;
}

body {
    overflow: hidden;
    padding: 0;
    margin: 0;
    width: 100%;
    height: 100%;
    background: gray;
}

#log {
    background: white;
    margin: 0;
    padding: 0.5em 0.5em 0.5em 0.5em;
    position: absolute;
    top: 0.5em;
    left: 0.5em;
    right: 0.5em;
    bottom: 3em;
    overflow: auto;
}

#form {
    padding: 0 0.5em 0 0.5em;
    margin: 0;
    position: absolute;
    bottom: 1em;
    left: 0px;
    width: 100%;
    overflow: hidden;
}
</style>
</head>
<body>
<div id="log"></div>
<form id="form">
    <input type="button" id="send" value="Send" />
    <input type="text" id="to" size="8"/>:
    <input type="text" id="msg" size="64"/>

    <input type="button" id="login" value="Login" />
    <input type="text" id="username" size="20"/>
    <input type="text" id="password" size="20"/>
</form>
</body>
</html>
